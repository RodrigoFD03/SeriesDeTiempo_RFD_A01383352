{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/RodrigoFD03/SeriesDeTiempo_RFD_A01383352/blob/main/Series1.Sesion6y7_RFD_A01383352ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Series de tiempo\n",
        "## Rodrigo Fuentes Dávila A01383352\n",
        "### Sesión 6 -03 marzo 2023\n"
      ],
      "metadata": {
        "id": "APaxXYBUYRhn"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# importamos las librerias de siempre\n",
        "import numpy as np\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "%matplotlib inline "
      ],
      "metadata": {
        "id": "ECBtiooaYb4N"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# importamos las librerias de series de tiempo\n",
        "from statsmodels.graphics.tsaplots import plot_acf\n",
        "from statsmodels.graphics.tsaplots import plot_pacf\n",
        "from statsmodels.tsa.stattools import acf\n",
        "from statsmodels.tsa.stattools import pacf\n",
        "from statsmodels.tsa.stattools import adfuller\n",
        "from statsmodels.tsa.stattools import kpss\n",
        "from statsmodels.tsa.arima_process import ArmaProcess\n",
        "from statsmodels.tsa.arima.model import ARIMA"
      ],
      "metadata": {
        "id": "qIxAjjWwZCsT"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#tamaño de graficas\n",
        "plt.rcParams['figure.figsize']=[12,6]"
      ],
      "metadata": {
        "id": "t2WY26ljF5SS"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# importamos datos\n",
        "procesos=pd.read_csv(\"https://raw.githubusercontent.com/jaime-escobedo-tec/SeriesDeTiempo-Tec/main/procesos.csv\")"
      ],
      "metadata": {
        "id": "98kNmBn8jIjP"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "procesos.head()"
      ],
      "metadata": {
        "id": "wkq7RArnwQ1y",
        "outputId": "d5214418-b2e7-434b-e3b4-956961a75163",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   ruido_blanco  caminata_aleatoria\n",
              "0      0.000000            0.000000\n",
              "1      0.706032            0.706032\n",
              "2      1.915985            2.622017\n",
              "3     -2.141755            0.480261\n",
              "4      0.719057            1.199318"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-cfbecb8d-b4aa-4fc3-860b-996499f629b1\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ruido_blanco</th>\n",
              "      <th>caminata_aleatoria</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0.706032</td>\n",
              "      <td>0.706032</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1.915985</td>\n",
              "      <td>2.622017</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>-2.141755</td>\n",
              "      <td>0.480261</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0.719057</td>\n",
              "      <td>1.199318</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cfbecb8d-b4aa-4fc3-860b-996499f629b1')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-cfbecb8d-b4aa-4fc3-860b-996499f629b1 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-cfbecb8d-b4aa-4fc3-860b-996499f629b1');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Graficamos el proceso de Ruido blanco"
      ],
      "metadata": {
        "id": "CsRfIXNRja-1"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# figsize=( 12,6)\n",
        "procesos[\"ruido_blanco\"].plot()\n",
        "plt.title(\"ruido blanco\")\n",
        "plt.show"
      ],
      "metadata": {
        "id": "SEv_jYWQjen2",
        "outputId": "646ef017-aa38-44f6-adfa-78304872296c",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 408
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<function matplotlib.pyplot.show(close=None, block=None)>"
            ]
          },
          "metadata": {},
          "execution_count": 6
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 864x432 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "\n",
        "**Si, el ruido blanco es estacionario**"
      ],
      "metadata": {
        "id": "sXXk_EGmkB-d"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Graficamos la caminata aleatoria pura"
      ],
      "metadata": {
        "id": "TY6sRcoWj4XO"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "procesos[\"caminata_aleatoria\"].plot()\n",
        "plt.title(\"camianata aleatoria\")\n",
        "plt.show"
      ],
      "metadata": {
        "id": "0E10qTHyj78d",
        "outputId": "5e0c9efd-d0a2-4319-a69e-a0c6b8ea8c27",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 408
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<function matplotlib.pyplot.show(close=None, block=None)>"
            ]
          },
          "metadata": {},
          "execution_count": 7
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 864x432 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "menciona si este proceso es estacionario¿?\n",
        "¿a qué variable económica o financiera se parece la caminata aleatoria?**No es estacionaria. El precio de las acciones, tipo de cambio, la inflación, etc son caminatas aleatorias.**"
      ],
      "metadata": {
        "id": "26rltlvNkJ8t"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "El prónostico de la serie lo vamos a realizar en varios pasos:\n",
        "1. Graficar la serie\n",
        "2. Realizar la prueba de raices unitarias para verificar que el proceso sea estacionario\n",
        "3. Si el proceso no es estacionario, lo hacemos estacionario. Si ya es estacionario procedemos al siguiente paso\n",
        "4. Identificar qué tipo de proceso estacionario es\n",
        "5. Identificado el proceso, realizar el pronóstico de la serie"
      ],
      "metadata": {
        "id": "tJJ_M0hvlIy9"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "como ejemplo utilizaremos la inflación de Estados Unidos "
      ],
      "metadata": {
        "id": "7lwhwzMWnKIx"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# importamos la base de datos\n",
        "inflacion_usa= pd.read_csv('https://raw.githubusercontent.com/jaime-escobedo-tec/SeriesDeTiempo-Tec/main/inflaci%C3%B3nUSA1.csv', index_col=\"mes\", parse_dates=True)"
      ],
      "metadata": {
        "id": "Z_ysgkv2nJI-"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# vemos el dataframe\n",
        "inflacion_usa.tail()"
      ],
      "metadata": {
        "id": "3W7713_vqFIw",
        "outputId": "9f8c09c6-05e3-4703-c313-5f9ff5054565",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 237
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        inflacion_usa\n",
              "mes                  \n",
              "sep-22        8.20167\n",
              "oct-22        7.70000\n",
              "nov-22        7.10000\n",
              "dic-22        6.50000\n",
              "ene-23        6.40000"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a00a3436-80bf-441c-b5f0-789b83aca989\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>inflacion_usa</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mes</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>sep-22</th>\n",
              "      <td>8.20167</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>oct-22</th>\n",
              "      <td>7.70000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>nov-22</th>\n",
              "      <td>7.10000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>dic-22</th>\n",
              "      <td>6.50000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ene-23</th>\n",
              "      <td>6.40000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a00a3436-80bf-441c-b5f0-789b83aca989')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-a00a3436-80bf-441c-b5f0-789b83aca989 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-a00a3436-80bf-441c-b5f0-789b83aca989');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# comenzamos graficando la serie\n",
        "# titulo y nombre a ejes\n",
        "inflacion_usa[\"inflacion_usa\"].plot()\n",
        "plt.ylabel(\"porcentaje\")\n",
        "plt.xlabel(\"mes-año\")\n",
        "plt.title(\"inflacion Mensual EE.UU. 2004-2023\")\n",
        "plt.show()"
      ],
      "metadata": {
        "id": "WvgpvJsRqQP0",
        "outputId": "501379cb-2dfa-4431-d111-91bbdb7d9616",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 404
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 864x432 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "tJUcC1_squ16"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "## vamos a verificar que la serie sea estacionaria\n",
        "## Dickey Fuller Aumentada (Aumented Dickey Fuller)\n",
        "result_adf = adfuller(inflacion_usa)\n",
        "print('p-value: %.2f' % result_adf[1])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "dslKVdagrVuC",
        "outputId": "e14ac00c-4fcd-46dc-c94b-6c727d927188"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "p-value: 0.18\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Recuerde que\n",
        "\n",
        " **$H_0:$ serie No estacionaria**\n",
        "\n",
        " **$H_a:$ serie estacionaria**"
      ],
      "metadata": {
        "id": "QKaxTIzNrtu1"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "regla de decisión si el p-valor$< \\alpha $ entonces rechazar $H_0$"
      ],
      "metadata": {
        "id": "J04CPVN_sLlq"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "con un $\\alpha=0.05$"
      ],
      "metadata": {
        "id": "ULyR2mkBsb4Q"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "conclusión:**0.18>0.05, No rechazamos Hola serie es no estacionaria**\n"
      ],
      "metadata": {
        "id": "Qe8fx5YMsiP0"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "**¿Cómo diferenciar una serie?**"
      ],
      "metadata": {
        "id": "0Rnan1qasqbb"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# diferenciar serie\n",
        "inflacion_usa[\"inflacion_diff\"]=inflacion_usa[\"inflacion_usa\"].diff()"
      ],
      "metadata": {
        "id": "Fvcd-ylrsxqo"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# graficamos esta nueva serie\n",
        "inflacion_usa[\"inflacion_diff\"].plot()\n",
        "plt.title(\"inflacion diferenciada\")\n",
        "plt.show"
      ],
      "metadata": {
        "id": "ZF0Ss5nttJgQ",
        "outputId": "cc3a9242-95ad-49eb-c50f-6598daa23e3e",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 422
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<function matplotlib.pyplot.show(close=None, block=None)>"
            ]
          },
          "metadata": {},
          "execution_count": 13
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 864x432 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Para determinar que tipo de procesos es, recurriremos a \n",
        "Función correlación  ACF funcion de autocorrelación parcial PACF"
      ],
      "metadata": {
        "id": "g6PjdV92SH6m"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Realizamos la prueba de raices unitaria"
      ],
      "metadata": {
        "id": "JuCQlyMytZ6q"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "result_adf = adfuller(inflacion_usa['inflacion_diff'].dropna())\n",
        "print('p-value: %.2f' % result_adf[1])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "CH_6eVWCtera",
        "outputId": "aa9c4dbc-460c-43ff-b092-3db8925b3bce"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "p-value: 0.00\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Conclusión: Ahora el\n",
        "pvalue=0.00<0.05, RECHAZAMOS Ho. La serie es estacionaria"
      ],
      "metadata": {
        "id": "YqDDrjfDvEYD"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "si la serie es estacionaria, tratamos de identificar que proceso es para eso vamos a ver si gráfica de autocorrelación y autocorrelación parcial"
      ],
      "metadata": {
        "id": "LHxQd0lIvGgI"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#plot_acf(serie, zero=False, lags=30);\n",
        "plot_acf(inflacion_usa[\"inflacion_diff\"].dropna(),zero=False, lags=30);"
      ],
      "metadata": {
        "id": "5AVKfWbfBJpy",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 390
        },
        "outputId": "63f29222-e067-4351-af4c-8c410697fa86"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 864x432 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#autocorrelación parcial, PACF\n",
        "plot_pacf(inflacion_usa[\"inflacion_diff\"].dropna(),zero=False, lags=30);"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 390
        },
        "id": "ySHcHc_JTd0Z",
        "outputId": "6b35e685-90d2-4916-9caf-4fd3e389cafa"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 864x432 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAtEAAAF1CAYAAAAurLZiAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjUuMywgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/NK7nSAAAACXBIWXMAAAsTAAALEwEAmpwYAAAn6UlEQVR4nO3df7xddX3n+9c7BwLhR5rwI5RACigMAv0RnQyMU6fNiFjttMLMOBY7g9AHXmbmFmfa3s7Vaq9aRr127m21Tn205RaUogIWbc3taKmiGad3lCFgBAmPlEih+YEkQtKICcSc87l/7HXsTjgnyWLvc/Y+Z7+ej8d+ZK/v+rG/O2v/eJ+1P+u7UlVIkiRJOnILBt0BSZIkaa4xREuSJEktGaIlSZKklgzRkiRJUkuGaEmSJKklQ7QkSZLUkiFaknqQ5JkkLzqC5c5OUkmOmo1+Dask1yT5yx7W/1ySq/vZJ0l6IQzRkua1JI8l2duE3SeTfDTJCS9wW2uTvLm7rapOqKpH+9Pb7z/GziTHtFyvkpzbr34MgyTvTvKx7raqem1V3TKoPknSJEO0pFHws1V1AvAyYBXw621WTseMf14mORv4x0ABr5vpx+vVVEfVR/1Iu6TRYYiWNDKqaivwOeCHkyxN8mdJdjRHfv8syZmTyzZHhN+b5P8D9gC30gm4v9sc1f7dZrnvHwFO8k+TfC3J7iSbk7y7ZRffBHwV+ChwQMnCwUfBu8sikny5af5607efa9r/lySbkjydZE2S5V3rX5Tk8828J5O8vWk/JskHk2xrbh+cPCqeZHWSLUnemuRbwEeao8V3JvlYkt3ANUl+IMlNSZ5IsjXJe5KMTfWEk/xO83+1O8l9Sf5x0/4a4O3AzzXP6esH/z8kWZDk15M8nmR7kj9K8gPNvMnymauT/E2Sbyd5R8v9IUnTMkRLGhlJVgA/DXyNzuffR4CzgB8C9gK/e9AqVwHXAScC1wD/Hbi+KeG4foqH+C6dILwE+KfAv0tyRYsuvgn4eHP7qSSnHclKVfUTzd0fa/p2R5JXAv8n8AbgdOBx4HaAJCcCXwD+HFgOnAvc3WzjHcA/BFYCPwZczIFH7n8QOInO/9t1TdvlwJ10nvfH6fwRsL/Z7kuBVwMHlMF0ubd5rJOATwB/nOTYqvpz4H3AHc1z+rEp1r2muf0T4EXACTx/H74COB+4FHhnkgum6YcktWKIljQK/jTJLuAvgf8GvK+qnqqqT1XVnqr6DvBe4CcPWu+jVfVQVe2vqu8d7kGqam1VPVhVE1X1AHDbFNucUpJX0Ammn6yq+4BvAj9/xM/w+f4VcHNV3V9VzwG/Bry8KRn5GeBbVfVbVfVsVX2nqu7pWu+GqtpeVTuA36Dzx8SkCeBdVfVcVe1t2r5SVX9aVRPAYjp/qPxSVX23qrYDHwCunKqTVfWxZl/sr6rfAo6hE3qP9Dn+dlU9WlXPNM/xyoNKSn6jqvZW1deBr9P5w0CSembtmqRRcEVVfaG7IclxdMLda4ClTfOJScaqaryZ3tzmQZJcArwf+GFgIZ1A+MdHuPrVwF9U1beb6U80bR9o04cuy4H7Jyeq6pkkTwFnACvohPTp1nu8a/rxpm3Sjqp69qB1uv+fzgKOBp5IMtm2gGn+L5P8KnBt8xhFJ4SfMu2zOnxfjwK6j+B/q+v+HjpHqyWpZx6JljSq/jc6RzwvqarFwGRJRLqWqYPWOXj6YJ8A1gArquoHgN8/aHtTSrKITtnFTyb5VlNv/MvAjyWZPHL6XeC4rtV+8DCb3UYn0E4+xvHAycBWOoF2umH5DliPTqnLtq7pqf4Puts2A88Bp1TVkua2uKouOnilpv75f6fz3JdW1RLgb/m7/7PD/X9P1df9wJOHWU+SemaIljSqTqRTB70ryUnAu45gnSeZPnxObvPpqno2ycUceTnGFcA4cCGd+uCVwAV0arDf1CyzHvjnSY5rTmS89jB9uw34hSQrmxMD3wfcU1WPAX8GnJ7kl5oTCU9sjqJPrvfrSU5NcgrwTuCAYeYOpaqeAP4C+K0ki5uT/16cZKqylhPphN4dwFFJ3knnSHT3czr7ECOj3Ab8cpJz0hm2cLKGev+R9leSXihDtKRR9UFgEfBtOiNi/PkRrPM7wOub0Tw+NMX8/xW4Icl36ITPTx5hX64GPlJVf1NV35q80TlJ7l81Nb4fAPbRCZa30DmBr9u7gVuS7EryhqZ85f8APgU8AbyYpi65qQG/DPhZOuUOj9A5OQ/gPcA64AHgQTolIe85wucx6U10ylk2ADvpnHR4+hTL3UXn//2v6JRiPMuBZR+TpTBPJbmf57uZzqgpXwb+uln/LS37KkkvSKoO92uZJEmSpG4eiZYkSZJa6kuITnJzM9D9N6aZnyQfagb9fyDJy7rmXZ3kkeZ29VTrS5IkScOkX0eiP0pnmKjpvBY4r7ldB/weQNfJPJfQGdD/XUmWTrcRSZIkaRj0JURX1ZeBpw+xyOXAH1XHV4ElSU4Hfgr4fFU9XVU7gc9z6DAuSZIkDdxs1USfwYFnXG9p2qZrlyRJkobWnLliYZLr6JSCcPzxx//9l7zkJQPukSRJkuaz++6779tVdepU82YrRG+lc5nZSWc2bVuB1Qe1r51qA1V1I3AjwKpVq2rdunUz0U9JkiQJgCSPTzdvtso51gBvakbp+IfA3zZXtboLeHWSpc0Jha9u2iRJkqSh1Zcj0Uluo3NE+ZQkW+iMuHE0QFX9PvBZ4KeBTcAe4BeaeU8n+U/Avc2mbqiqQ52gKEmSJA1cX0J0Vb3xMPML+MVp5t1M59KtkiRJ0pzgFQslSZKklgzRkiRJUkuGaEmSJKklQ7QkSZLUkiFakiRJaskQLUmSJLVkiJYkSZJaMkRLkiRJLRmiJUmSpJYM0ZIkSVJLhmhJkiSpJUO0JEmS1JIhWpIkSWrJEC1JkiS1ZIiWJEmSWjJES5IkSS0ZoiVJkqSWDNGSJElSS4ZoSZIkqSVDtCRJktSSIVqSJElqyRAtSZIktWSIliRJkloyREuSJEktGaIlSZKklgzRkiRJUkuGaEmSJKklQ7QkSZLUkiFakiRJaskQLUmSJLVkiJYkSZJaMkRLkiRJLfUlRCd5TZKNSTYledsU8z+QZH1z+6sku7rmjXfNW9OP/kiSJEkz6aheN5BkDPgwcBmwBbg3yZqq2jC5TFX9ctfybwFe2rWJvVW1std+SJIkSbOlH0eiLwY2VdWjVbUPuB24/BDLvxG4rQ+PK0mSJA1EP0L0GcDmruktTdvzJDkLOAf4YlfzsUnWJflqkiume5Ak1zXLrduxY0cfui1JkiS9MLN9YuGVwJ1VNd7VdlZVrQJ+HvhgkhdPtWJV3VhVq6pq1amnnjobfZUkSZKm1I8QvRVY0TV9ZtM2lSs5qJSjqrY2/z4KrOXAemlJkiRp6PQjRN8LnJfknCQL6QTl542ykeQlwFLgK11tS5Mc09w/BfhxYMPB60qSJEnDpOfROapqf5LrgbuAMeDmqnooyQ3AuqqaDNRXArdXVXWtfgHwB0km6AT693eP6iFJkiQNoxyYaeeGVatW1bp16wbdDUmSJM1jSe5rzt17Hq9YKEmSJLVkiJYkSZJaMkRLkiRJLRmiJUmSpJYM0ZIkSVJLhmhJkiSpJUO0JEmS1JIhWpIkSWrJEC1JkiS1ZIiWJEmSWjJES5IkSS0ZoiVJkqSWDNGSJElSS4ZoSZIkqSVDtCRJktSSIVqSJElqyRAtSZIktWSIliRJkloyREuSJEktGaIlSZKklgzRkiRJUkuGaEmSJKklQ7QkSZLUkiFakiRJaskQLUmSJLVkiJYkSZJaMkRLkiRJLRmiJUmSpJYM0ZIkSVJLhmhJkiSpJUO0JEmS1JIhWpIkSWqpLyE6yWuSbEyyKcnbpph/TZIdSdY3tzd3zbs6ySPN7ep+9EeSJEmaSUf1uoEkY8CHgcuALcC9SdZU1YaDFr2jqq4/aN2TgHcBq4AC7mvW3dlrvyRJkqSZ0o8j0RcDm6rq0araB9wOXH6E6/4U8PmqeroJzp8HXtOHPkmSJEkzph8h+gxgc9f0lqbtYP8iyQNJ7kyyouW6JLkuybok63bs2NGHbkuSJEkvzGydWPj/AmdX1Y/SOdp8S9sNVNWNVbWqqladeuqpfe+gJEmSdKT6EaK3Aiu6ps9s2r6vqp6qqueayT8E/v6RritJkiQNm36E6HuB85Kck2QhcCWwpnuBJKd3Tb4OeLi5fxfw6iRLkywFXt20SZIkSUOr59E5qmp/kuvphN8x4OaqeijJDcC6qloD/PskrwP2A08D1zTrPp3kP9EJ4gA3VNXTvfZJkiRJmkmpqkH3obVVq1bVunXrBt0NSZIkzWNJ7quqVVPN84qFkiRJUkuGaEmSJKklQ7QkSZLUkiFakiRJaskQLUmSJLVkiJYkSZJaMkRLkiRJLRmiJUmSpJYM0ZIkSVJLhmhJkiSpJUO0JEmS1JIhWpIkSWrJEC1JkiS1ZIiWJEmSWjJES5IkSS0ZoiVJkqSWDNGSJElSS4ZoSZIkqSVDtCRJktSSIVqSJElqyRAtSZIktWSIliRJkloyREuSJEktGaIlSZKklgzRkiRJUkuGaEmSJKklQ7QkSZLUkiFakiRJaskQLUmSJLV01KA7IGn4jU8Uazdu56Ftu7lo+WJWn7+MsQUZdLckSRoYQ7SkQxqfKK666R7Wb97F3n3jLFo4xsoVS7j12ksM0pKkkWU5h6RDWrtxO+s372LPvnEK2LNvnPWbd7F24/ZBd02SpIHpS4hO8pokG5NsSvK2Keb/SpINSR5IcneSs7rmjSdZ39zW9KM/kvrnoW272btv/IC2vfvG2bBt94B6JEnS4PVczpFkDPgwcBmwBbg3yZqq2tC12NeAVVW1J8m/A/4z8HPNvL1VtbLXfkiaGRctX8yihWPs6QrSixaOceHyxQPslSRJg9WPI9EXA5uq6tGq2gfcDlzevUBVfamq9jSTXwXO7MPjSpoFq89fxsoVS5gsfz6uqYleff6ywXZMkqQB6keIPgPY3DW9pWmbzrXA57qmj02yLslXk1wx3UpJrmuWW7djx46eOizpyI0tCLdeewnnLjuBM5cs4r+88aWeVChJGnmzOjpHkn8NrAJ+sqv5rKramuRFwBeTPFhV3zx43aq6EbgRYNWqVTUrHZYEdIL00uMWsvQ4uPSC0wbdHUmSBq4fR6K3Aiu6ps9s2g6Q5FXAO4DXVdVzk+1VtbX591FgLfDSPvRJkiRJmjH9CNH3AuclOSfJQuBK4IBRNpK8FPgDOgF6e1f70iTHNPdPAX4c6D4hUZIkSRo6PZdzVNX+JNcDdwFjwM1V9VCSG4B1VbUG+L+AE4A/TgLwN1X1OuAC4A+STNAJ9O8/aFQPSZIkaej0pSa6qj4LfPagtnd23X/VNOv9D+BH+tEHSZIkabZ4xUJJkiSppVkdnUPS7BifKNZu3M5D23Zz0fLFrD5/mUPSSdKQ8jN7bjJES/PM+ERx1U33sH7zLvbuG2dRc3EUx3aWpOHjZ/bcZTmHNM+s3bid9Zt3sWffOAXs2TfO+s27WLtx+2HX1d8ZnyjufvhJPnT3I9z98JOMTzg8vaT+8zN77vJItDTPPLRtN3v3jR/QtnffOBu27fZCKUfII0OSZouf2XOXR6Kleeai5YtZtHDsgLZFC8e4cPniAfVo7vHIkKTZ4mf23GWI7iN//tUwWH3+MlauWMLkAdPjmqOoq89fNtiOzSGHOjIkzXV+Vw0XP7PnLss5+sSffzUsxhaEW6+9hNf+zpfZ89w4v3H5RZ7p3dLkkaE9XUHaI0OaD/yuGj5+Zs9dHonuE3/+1TAZWxCWHreQM5Yu4tILTvPDuCWPDGm+8rtqOPmZPTcZovvEn3+l+WPyyNC5y07gzCWL+C9vfKlH6jQv+F0l9Y8huk88MUCaXzwypPnI7yqpfwzRfeLPv5KkYed3ldQ/hug+8edfSdKw87tK6h9H5+ijyZ9/lx6HA6RLkoaS31VSfxiiW/jKN5867DK7n/3eES8rzaR+vxb7ub2JiWL95l089tR3Ofvk4zs/Lw/hkTDfz5qvfG0PH/fJob38xScPugvPY4iWNKsmJor3fe5hNm1/hn37J1h41ALOXXYCb3/tBUMZpCVJmoo10ZJm1frNu9i0/Rme2z9BAc/tn2DT9mdYv3nXoLsmSdIRM0RLmlWPPfVd9u2fOKBt3/4JHnvquwPqkSRJ7RmiJc2qs08+noVHHfjRs/CoBZx98vED6pEkSe0ZoiXNqpUrlnDushNIU/58TFMTvXLFkoH2a66ZmCjuf3wnn75/C/c/vpOJiRp0lyRppHhioaRZtWBBePtrL+Ctn36A5743zjX/6JyhHZ1jWHlypiQNnkeiJc26BQvCiccexSknHsPLzlpq8GvJkzMlafAM0ZI0x3hypiQNnuUckjTHTJ6c+VxXkB6FkzPnykV6JI0GQ7QkzTGTJ2dueGI3VaNxcqZ14JKGjeUckjTHTJ6cecaSRZx6wkL+/SvPm/dh0jpwScPGEC1Jc9ConZxpHbikYWM5hyRp6FkHbh245pf58No2RGvemw9vVGnUWQduHbjmj/ny2jZEa16bL29UadSN4kV6uuvA4cA68JedtXTAvZNeuPny2rYmWvOaJyNJ84d14NaBa36YL6/tvoToJK9JsjHJpiRvm2L+MUnuaObfk+Tsrnm/1rRvTPJT/eiPNGkm3qgTE8X9j+/k0/dv4f7HdzIxUT31sd/bkzQ/TNaBdxuFOnDNf/Pltd1zOUeSMeDDwGXAFuDeJGuqakPXYtcCO6vq3CRXAr8J/FySC4ErgYuA5cAXkvy9qhrvtV8S9P9kpH6Xh1huImk6o1gHrtEwX17b/TgSfTGwqaoerap9wO3A5QctczlwS3P/TuDSJGnab6+q56rqr4FNzfakvph8o6bJo72+UftdHmK5iaTpjOJ44BoN8+W1narefjpO8nrgNVX15mb6KuCSqrq+a5lvNMtsaaa/CVwCvBv4alV9rGm/CfhcVd15qMc86awL6rK339xTv1+I3c9+77DLPP7UHgDOOvm4me6OjlBV8dff3sNEFactPpYTjhkjeWFv1B3feY5vP7Pvee2nnrCQU048ZuDb69bv1+Kwb28mDHsfh71/M6Hfz7mqeOa5cZ793jjHHj3W0+fDTJmJ/TyKr51hN4r7pM1zXnzs0TPdnSl98t/+o/uqatVU8+bM6BxJrgOuAzjh9BcPuDfTm4kX/7CHl2H/gE/Ci07tT53VsUePkUD3354JHHP02FBsr1u/X4vDvj3o/2ux330c9v7B8H8+9PM5VxV/8/Re9uzrVBAmsOjoMX7opEU9Belhfs4ztc1hf90M+/dUP7czaRSf82zrR4jeCqzomj6zaZtqmS1JjgJ+AHjqCNcFoKpuBG4EWLVqVd3xb17eh66385VvPjXrjwlww589BMA7f+aikdjeTG2zH6yJHm7D+rqZNOz9g7nx+dAv9z++kw998ZHvT1fB+ETxsz96xgseZmtionjrpx/g2e+N8zM/snzeD8M3aZhfNzO1T4b5tQ3z77v55S8+edYfE+CT/3b6ef0I0fcC5yU5h04AvhL4+YOWWQNcDXwFeD3wxaqqJGuATyT5bTonFp4H/M8+9EmaEZN1XP26eEu/tyfpyB1q9J4XEqIn/yjeumsvVfChLz7iH8UD5j7RTOo5RFfV/iTXA3cBY8DNVfVQkhuAdVW1BrgJuDXJJuBpOkGbZrlPAhuA/cAvOjKHht2CBeFlZy3t24Dw/d6epCPT79F7Jk8UnizPmqsXkJhP3CeaSX2pia6qzwKfPajtnV33nwX+5TTrvhd4bz/6IUnSkZocvefgcqoXOnpPv49sq3fuE82kOXNioSRJ/dTvcqp+H9lW79wnmkmGaEnSyOpnOVW/j2yrd+4TzSRDtCRJfeCJwsPHfaKZZIhWTyYmiu88u59nvzfO/Y/v9MNJ0kjzROHhM4r7xO/m2dGPy35rRHUPHfTtZ/bxoS8+wvs+9zATE71dBVOSJL0wfjfPHkO0XrBDDR0kSZJmn9/Ns8cQPWImf+LZ8Z3nuP/xnT39ZXqooYMkzT39/HyQNBh+N88eQ/QI6fdPPJNDB3Vz6CBpbpqJn4AN5aPB/Txc/G6ePYboEdLvn3gmhw465qgFBDjGoYOkOavfnw/WZY4G9/Pw8bt59jg6xwjp95WbHDpImj/6/fng5ZZHg/t5+PjdPHsM0SNkJq7cNIpDB0nzUb8/H7zc8mhwPw+nmfhudti857OcY4T4E4+k6fT788G6zNHgfh4Nlu1MzSPRI8SfeCRNp9+fD15ueTS4n0eDZTtTM0SPGMsvJE2nn58P/tE+GkZ1P49aaYNlO1MzREuSZoR/tI+GUdvP3aUNVfChLz7CuctO4O2vvWDeBumZOKdqPrAmWpIk6QiN4hUBPadqah6JbuHlLz55II+7+NijB/r4gzCKz1m9G/bXzbD3TxoWw/xeufexp6csbZioGsr+9suaF7+CtRu3s2Hbbi5cvpjV5y9jbJ4eeT9ShmhJkqQjdNHyxSxaOMaefePfb1u0cIwLly8eYK9m3tiCcOkFp3HpBacNuitDw3IOSZKkI7T6/GWsXLGE4xaOEeC4hWOsXLGE1ecvG3TXNMs8Eq2hMz5R7Nyzjz3PjXP3w0/6k5EkaWiMLQi3XnuJpQ0yRGu4jE8UV910D5u2P8NEwVtu+xorVyzh1msv8QNKkjQULG0QWM6hIbN243bWb97F5EWQ9uwbZ/3mXazduH2wHZMkSepiiB5yk6UNW3fu5e6Hn2R8nl9i86Ftu9nbdbIGwN5942zYtntAPZIkSXo+Q/QQ6y5t2LJrL2+57WtcddM98zpIT5713G0UznqWJElziyF6iI1iaYNnPUuSpLnAEwuH2KFKG+bryQye9SxJkuYCQ/QQc0D3+fmHgkaTQzdK0vxiOccQs7RBmh9G8fwGSZrvPBI9xCxtkOaHQ53f4C8ukjQ3GaKHnKUN0tw3iuc3SNJ8ZzmHJM0wh26UpPnHEC1JM8zzGyRp/umpnCPJScAdwNnAY8AbqmrnQcusBH4PWAyMA++tqjuaeR8FfhL422bxa6pqfS99kqRh4/kNkjT/9FoT/Tbg7qp6f5K3NdNvPWiZPcCbquqRJMuB+5LcVVW7mvn/saru7LEfkjTUPL9BkuaXXss5Lgduae7fAlxx8AJV9VdV9UhzfxuwHTi1x8eVJEmSBqbXEH1aVT3R3P8WcMhDLEkuBhYC3+xqfm+SB5J8IMkxh1j3uiTrkqzbsWNHj92WJEmSXrjDhugkX0jyjSlul3cvV1UFTHvlgCSnA7cCv1BVE03zrwEvAf4BcBLPLwXp3v6NVbWqqladeqoHsiVJkjQ4h62JrqpXTTcvyZNJTq+qJ5qQvH2a5RYD/xV4R1V9tWvbk0exn0vyEeBXW/VekiRJGoBeyznWAFc3968GPnPwAkkWAn8C/NHBJxA2wZskoVNP/Y0e+yNJkiTNuF5D9PuBy5I8AryqmSbJqiR/2CzzBuAngGuSrG9uK5t5H0/yIPAgcArwnh77I0mSJM24noa4q6qngEunaF8HvLm5/zHgY9Os/8peHl+SJEkaBK9YKEmSJLVkiJYkSUNjfKLYuWcfW3fu5e6Hn2R8YtqBv6SBMkRLkqShMD5RXHXTPWza/gxbdu3lLbd9jatuuscgraFkiJYkSUNh7cbtrN+8i8nMvGffOOs372LtxilH0JUGyhAtSZKGwkPbdrN33/gBbXv3jbNh2+4B9UianiFakiQNhYuWL2bRwrED2hYtHOPC5YsH1CNpeoZoSZI0FFafv4yVK5Zw3MIxAhy3cIyVK5aw+vxlg+6a9Dw9jRMtSZLUL2MLwq3XXsLajdvZsG03Fy5fzOrzlzG2IIPumvQ8hmhJkjQ0xhaESy84jUsvOG3QXZEOyXIOSZIkqSVDtCRJktSSIVqSJElqyRAtSZIktWSIliRJkloyREuSJEktGaIlSZKklgzRkiRJUkuGaEmSJKklQ7QkSZLUkiFakiRJaskQLUmSJLVkiJYkSZJaMkRLkiRJLRmiJUmSpJYM0ZIkSVJLhmhJkiSpJUO0JEmS1JIhWpIkSWrJEC1JkiS1ZIiWJEmSWjJES5IkSS0ZoiVJkqSWegrRSU5K8vkkjzT/Lp1mufEk65vbmq72c5Lck2RTkjuSLOylP5IkSdJs6PVI9NuAu6vqPODuZnoqe6tqZXN7XVf7bwIfqKpzgZ3AtT32R5IkSZpxvYboy4Fbmvu3AFcc6YpJArwSuPOFrC9JkiQNSq8h+rSqeqK5/y3gtGmWOzbJuiRfTXJF03YysKuq9jfTW4AzpnugJNc121i3Y8eOHrstSZIkvXBHHW6BJF8AfnCKWe/onqiqSlLTbOasqtqa5EXAF5M8CPxtm45W1Y3AjQCrVq2a7nEkSZKkGXfYEF1Vr5puXpInk5xeVU8kOR3YPs02tjb/PppkLfBS4FPAkiRHNUejzwS2voDnIEmSJM2qXss51gBXN/evBj5z8AJJliY5prl/CvDjwIaqKuBLwOsPtb4kSZI0bHoN0e8HLkvyCPCqZpokq5L8YbPMBcC6JF+nE5rfX1UbmnlvBX4lySY6NdI39dgfSZIkacYdtpzjUKrqKeDSKdrXAW9u7v8P4EemWf9R4OJe+iBJAOMTxc49+9jz3Dh3P/wkq89fxtiCDLpbkqR5yisWSprzxieKq266h03bn2HLrr285bavcdVN9zA+4TnIkqSZYYiWNOet3bid9Zt3MZmZ9+wbZ/3mXazdOOW5zpIk9cwQLWnOe2jbbvbuGz+gbe++cTZs2z2gHkmS5jtDtKQ576Lli1m0cOyAtkULx7hw+eIB9UiSNN8ZoiXNeavPX8bKFUs4buEYAY5bOMbKFUtYff6yQXdNkjRP9TQ6hyQNg7EF4dZrL2Htxu1s2LabC5cvdnQOSdKMMkRLmhfGFoRLLziNSy84bdBdkSSNAMs5JEmSpJYM0ZIkSVJLhmhJkiSpJUO0JEmS1JIhWpIkSWrJEC1JkiS1ZIiWJEmSWjJES5IkSS0ZoiVJkqSWDNGSJElSS4ZoSZIkqSVDtCRJktSSIVqSJElqyRAtSZIktWSIliRJkloyREuSJEktGaIlSZKklgzRkiRJUkuGaEmSJKklQ7QkSZLUkiFakiRJaskQLUmSJLVkiJYkSZJaMkRLkiRJLRmiJUmSpJZ6CtFJTkry+SSPNP8unWKZf5Jkfdft2SRXNPM+muSvu+at7KU/kiRJ0mzo9Uj024C7q+o84O5m+gBV9aWqWllVK4FXAnuAv+ha5D9Ozq+q9T32R5IkSZpxvYboy4Fbmvu3AFccZvnXA5+rqj09Pq4kSZI0ML2G6NOq6onm/reA0w6z/JXAbQe1vTfJA0k+kOSY6VZMcl2SdUnW7dixo4cuS5IkSb05bIhO8oUk35jidnn3clVVQB1iO6cDPwLc1dX8a8BLgH8AnAS8dbr1q+rGqlpVVatOPfXUw3VbkiRJmjFHHW6BqnrVdPOSPJnk9Kp6ognJ2w+xqTcAf1JV3+va9uRR7OeSfAT41SPstyRJkjQwvZZzrAGubu5fDXzmEMu+kYNKOZrgTZLQqaf+Ro/9kSRJkmZcryH6/cBlSR4BXtVMk2RVkj+cXCjJ2cAK4L8dtP7HkzwIPAicArynx/5IkiRJM+6w5RyHUlVPAZdO0b4OeHPX9GPAGVMs98peHl+SJEkaBK9YKEmSJLVkiJYkSZJaMkRLkiRJLRmiJUmSpJYM0ZIkSVJLhmhJkiSpJUO0JEmS1JIhWpIkSWrJEC1JkiS1ZIiWJEmSWjJES5IkSS0ZoiVJkqSWDNGSJElSS4ZoSZIkqSVDtCRJktSSIVqSJElqyRAtSZIktWSIliRJkloyREuSJEktGaIlSZKklgzRkiRJUkuGaEmSJKklQ7QkSZLUkiFakiRJaskQLUmSJLVkiJYkSZJaMkRLkiRJLRmiJUmSpJYM0ZIkSVJLhmhJkiSpJUO0JEmS1FJPITrJv0zyUJKJJKsOsdxrkmxMsinJ27raz0lyT9N+R5KFvfRHkiRJmg29Hon+BvDPgS9Pt0CSMeDDwGuBC4E3Jrmwmf2bwAeq6lxgJ3Btj/2RJEmSZlxPIbqqHq6qjYdZ7GJgU1U9WlX7gNuBy5MEeCVwZ7PcLcAVvfRHkiRJmg2zURN9BrC5a3pL03YysKuq9h/ULkmSJA21ow63QJIvAD84xax3VNVn+t+laftxHXBdM/lMksMdAW/jFODbfdye+sP9MnzcJ8PHfTKc3C/Dx30ynIZ9v5w13YzDhuiqelWPD74VWNE1fWbT9hSwJMlRzdHoyfbp+nEjcGOPfZlSknVVNe2JkRoM98vwcZ8MH/fJcHK/DB/3yXCay/tlNso57gXOa0biWAhcCaypqgK+BLy+We5qYNaObEuSJEkvVK9D3P2zJFuAlwP/NcldTfvyJJ8FaI4yXw/cBTwMfLKqHmo28VbgV5JsolMjfVMv/ZEkSZJmw2HLOQ6lqv4E+JMp2rcBP901/Vngs1Ms9yid0TsGbUbKRNQz98vwcZ8MH/fJcHK/DB/3yXCas/slnaoKSZIkSUfKy35LkiRJLY18iJ7ukuQanCSPJXkwyfok6wbdn1GV5OYk25N8o6vtpCSfT/JI8+/SQfZx1EyzT96dZGvzflmf5KcPtQ31V5IVSb6UZEOSh5L8h6bd98oAHWK/+H4ZkCTHJvmfSb7e7JPfaNrPSXJPk8PuaAahmBNGupyjuST5XwGX0bnYy73AG6tqw0A7NuKSPAasqqphHjdy3kvyE8AzwB9V1Q83bf8ZeLqq3t/80bm0qt46yH6Okmn2ybuBZ6rq/x5k30ZVktOB06vq/iQnAvfRufruNfheGZhD7Jc34PtlIJorVR9fVc8kORr4S+A/AL8CfLqqbk/y+8DXq+r3BtnXIzXqR6KnvCT5gPskDYWq+jLw9EHNlwO3NPdvofOlpFkyzT7RAFXVE1V1f3P/O3RGoToD3ysDdYj9ogGpjmeayaObWwGvBO5s2ufUe2XUQ/R0lyTXYBXwF0nua65UqeFxWlU90dz/FnDaIDuj77s+yQNNuYdlAwOS5GzgpcA9+F4ZGgftF/D9MjBJxpKsB7YDnwe+CexqhkOGOZbDRj1Eazi9oqpeBrwW+MXmJ2wNmeaCSaNbDzY8fg94MbASeAL4rYH2ZkQlOQH4FPBLVbW7e57vlcGZYr/4fhmgqhqvqpV0rlJ9MfCSwfaoN6Meoqe7JLkGqKq2Nv9upzMO+TCMJa6OJ5taw8maw+0D7s/Iq6onmy+mCeD/wffLrGvqOz8FfLyqPt00+14ZsKn2i++X4VBVu+hctfrlwJIkk9ctmVM5bNRD9JSXJB9wn0ZakuObk0BIcjzwauAbh15Ls2gNcHVz/2rgMwPsi/h+QJv0z/D9Mquak6VuAh6uqt/umuV7ZYCm2y++XwYnyalJljT3F9EZ1OFhOmH69c1ic+q9MtKjcwA0w9t8EBgDbq6q9w62R6MtyYv4u6tgHgV8wn0yGEluA1YDpwBPAu8C/hT4JPBDwOPAG6rKE91myTT7ZDWdn6YLeAz4N121uJphSV4B/HfgQWCiaX47nfpb3ysDcoj98kZ8vwxEkh+lc+LgGJ2DuJ+sqhua7/3bgZOArwH/uqqeG1xPj9zIh2hJkiSprVEv55AkSZJaM0RLkiRJLRmiJUmSpJYM0ZIkSVJLhmhJkiSpJUO0JEmS1JIhWpIkSWrJEC1JkiS19P8DXsOFffLiTH8AAAAASUVORK5CYII=\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# plot_pacf(serie, zero = False,  lags=20);"
      ],
      "metadata": {
        "id": "yHZi5WtACyQi"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Comentarios\n",
        "CONTINUACION SESION 7\n"
      ],
      "metadata": {
        "id": "tpaZqqjSDAXg"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "ic = {}\n",
        "for ar in range(5):\n",
        "    for ma in range(5):\n",
        "        print(f\"AR: {ar}, MA: {ma}\")\n",
        "        modelo = ARIMA(inflacion_usa[\"inflacion_diff\"].dropna(), order=(ar, 0, ma))\n",
        "        resultado = modelo.fit()\n",
        "        ic[(ar, ma)] = [resultado.aic, resultado.bic]\n",
        "\n",
        "ic = pd.DataFrame(ic, index=[\"AIC\", \"BIC\"]).T\n",
        "ic.index = ic.index.set_names([\"AR\", \"MA\"])\n",
        "ic"
      ],
      "metadata": {
        "id": "I3iWeHiaHSzm",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "cab6a4fc-85e8-46ee-f7a0-8a5e3264b0af"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "AR: 0, MA: 0\n",
            "AR: 0, MA: 1\n",
            "AR: 0, MA: 2\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "AR: 0, MA: 3\n",
            "AR: 0, MA: 4\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "AR: 1, MA: 0\n",
            "AR: 1, MA: 1\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "AR: 1, MA: 2\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/statespace/sarimax.py:978: UserWarning: Non-invertible starting MA parameters found. Using zeros as starting parameters.\n",
            "  warn('Non-invertible starting MA parameters found.'\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "AR: 1, MA: 3\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "AR: 1, MA: 4\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "AR: 2, MA: 0\n",
            "AR: 2, MA: 1\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "AR: 2, MA: 2\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.8/dist-packages/statsmodels/base/model.py:604: ConvergenceWarning: Maximum Likelihood optimization failed to converge. Check mle_retvals\n",
            "  warnings.warn(\"Maximum Likelihood optimization failed to \"\n",
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "AR: 2, MA: 3\n",
            "AR: 2, MA: 4\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.8/dist-packages/statsmodels/base/model.py:604: ConvergenceWarning: Maximum Likelihood optimization failed to converge. Check mle_retvals\n",
            "  warnings.warn(\"Maximum Likelihood optimization failed to \"\n",
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "AR: 3, MA: 0\n",
            "AR: 3, MA: 1\n",
            "AR: 3, MA: 2\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/statespace/sarimax.py:966: UserWarning: Non-stationary starting autoregressive parameters found. Using zeros as starting parameters.\n",
            "  warn('Non-stationary starting autoregressive parameters'\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "AR: 3, MA: 3\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.8/dist-packages/statsmodels/base/model.py:604: ConvergenceWarning: Maximum Likelihood optimization failed to converge. Check mle_retvals\n",
            "  warnings.warn(\"Maximum Likelihood optimization failed to \"\n",
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "AR: 3, MA: 4\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.8/dist-packages/statsmodels/base/model.py:604: ConvergenceWarning: Maximum Likelihood optimization failed to converge. Check mle_retvals\n",
            "  warnings.warn(\"Maximum Likelihood optimization failed to \"\n",
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "AR: 4, MA: 0\n",
            "AR: 4, MA: 1\n",
            "AR: 4, MA: 2\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "AR: 4, MA: 3\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.8/dist-packages/statsmodels/base/model.py:604: ConvergenceWarning: Maximum Likelihood optimization failed to converge. Check mle_retvals\n",
            "  warnings.warn(\"Maximum Likelihood optimization failed to \"\n",
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "AR: 4, MA: 4\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.8/dist-packages/statsmodels/base/model.py:604: ConvergenceWarning: Maximum Likelihood optimization failed to converge. Check mle_retvals\n",
            "  warnings.warn(\"Maximum Likelihood optimization failed to \"\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "              AIC         BIC\n",
              "AR MA                        \n",
              "0  0   452.246376  459.105067\n",
              "   1   446.295195  456.583232\n",
              "   2   445.143542  458.860925\n",
              "   3   440.267575  457.414304\n",
              "   4   442.262910  462.838984\n",
              "1  0   448.648464  458.936501\n",
              "   1   447.167560  460.884943\n",
              "   2   441.789790  458.936518\n",
              "   3   442.245054  462.821128\n",
              "   4   444.152306  468.157726\n",
              "2  0   442.625754  456.343137\n",
              "   1   440.161969  457.308697\n",
              "   2   427.888703  448.464777\n",
              "   3   442.814480  466.819899\n",
              "   4   441.234734  468.669499\n",
              "3  0   442.883696  460.030424\n",
              "   1   442.149836  462.725910\n",
              "   2   444.111525  468.116944\n",
              "   3   416.706834  444.141599\n",
              "   4   410.062419  440.926530\n",
              "4  0   443.676556  464.252629\n",
              "   1   443.326656  467.332076\n",
              "   2   446.103462  473.538227\n",
              "   3   436.578816  467.442927\n",
              "   4   397.817875  432.111332"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-dc81e157-4e84-4c63-83e8-0e1674379456\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th>AIC</th>\n",
              "      <th>BIC</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AR</th>\n",
              "      <th>MA</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th rowspan=\"5\" valign=\"top\">0</th>\n",
              "      <th>0</th>\n",
              "      <td>452.246376</td>\n",
              "      <td>459.105067</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>446.295195</td>\n",
              "      <td>456.583232</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>445.143542</td>\n",
              "      <td>458.860925</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>440.267575</td>\n",
              "      <td>457.414304</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>442.262910</td>\n",
              "      <td>462.838984</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th rowspan=\"5\" valign=\"top\">1</th>\n",
              "      <th>0</th>\n",
              "      <td>448.648464</td>\n",
              "      <td>458.936501</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>447.167560</td>\n",
              "      <td>460.884943</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>441.789790</td>\n",
              "      <td>458.936518</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>442.245054</td>\n",
              "      <td>462.821128</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>444.152306</td>\n",
              "      <td>468.157726</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th rowspan=\"5\" valign=\"top\">2</th>\n",
              "      <th>0</th>\n",
              "      <td>442.625754</td>\n",
              "      <td>456.343137</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>440.161969</td>\n",
              "      <td>457.308697</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>427.888703</td>\n",
              "      <td>448.464777</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>442.814480</td>\n",
              "      <td>466.819899</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>441.234734</td>\n",
              "      <td>468.669499</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th rowspan=\"5\" valign=\"top\">3</th>\n",
              "      <th>0</th>\n",
              "      <td>442.883696</td>\n",
              "      <td>460.030424</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>442.149836</td>\n",
              "      <td>462.725910</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>444.111525</td>\n",
              "      <td>468.116944</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>416.706834</td>\n",
              "      <td>444.141599</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>410.062419</td>\n",
              "      <td>440.926530</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th rowspan=\"5\" valign=\"top\">4</th>\n",
              "      <th>0</th>\n",
              "      <td>443.676556</td>\n",
              "      <td>464.252629</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>443.326656</td>\n",
              "      <td>467.332076</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>446.103462</td>\n",
              "      <td>473.538227</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>436.578816</td>\n",
              "      <td>467.442927</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>397.817875</td>\n",
              "      <td>432.111332</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dc81e157-4e84-4c63-83e8-0e1674379456')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-dc81e157-4e84-4c63-83e8-0e1674379456 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-dc81e157-4e84-4c63-83e8-0e1674379456');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 28
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "AQ-zCOQqHdG8"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Vamos a elegir el modelo que tiene el \"mejor\" criterio AKAIKE (AIC) el valor mas pequeño"
      ],
      "metadata": {
        "id": "7cG_7xGeHj--"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "ic.sort_values('AIC', ascending = True)"
      ],
      "metadata": {
        "id": "9w4IVfBhHmfK"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "eL CRITERIO DE AKAIKE (AIC) y el criterio bayesiano de informacion (BIC) nos ayudan para elegir el modelo adecuado\n",
        "\n",
        "Entre mas grande es el AIC/BIC es un peor modelo"
      ],
      "metadata": {
        "id": "uP-V6RMXWvls"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "El mejor modelo segun AIC es ARMA () 4,4"
      ],
      "metadata": {
        "id": "UiWE_ywUHyt1"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "modelo1 = ARIMA(inflacion_usa[\"inflacion_diff\"].dropna(), order=(4, 0, 4)) ##AR(4,0,4)\n",
        "resultado1 = modelo1.fit()  #calcula\n",
        "print(resultado1.summary())  #calcula"
      ],
      "metadata": {
        "id": "bdrV72fdH1Zu",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "0ddd6557-8e8e-4d9b-ed42-b3d795f7d8d9"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                               SARIMAX Results                                \n",
            "==============================================================================\n",
            "Dep. Variable:         inflacion_diff   No. Observations:                  228\n",
            "Model:                 ARIMA(4, 0, 4)   Log Likelihood                -188.909\n",
            "Date:                Tue, 07 Mar 2023   AIC                            397.818\n",
            "Time:                        14:05:28   BIC                            432.111\n",
            "Sample:                             0   HQIC                           411.654\n",
            "                                - 228                                         \n",
            "Covariance Type:                  opg                                         \n",
            "==============================================================================\n",
            "                 coef    std err          z      P>|z|      [0.025      0.975]\n",
            "------------------------------------------------------------------------------\n",
            "const          0.0182      0.040      0.457      0.647      -0.060       0.096\n",
            "ar.L1          0.7979      0.056     14.365      0.000       0.689       0.907\n",
            "ar.L2         -0.5685      0.092     -6.169      0.000      -0.749      -0.388\n",
            "ar.L3          0.5877      0.090      6.542      0.000       0.412       0.764\n",
            "ar.L4         -0.7090      0.061    -11.681      0.000      -0.828      -0.590\n",
            "ma.L1         -0.7485      0.691     -1.083      0.279      -2.104       0.607\n",
            "ma.L2          0.3198      0.161      1.981      0.048       0.003       0.636\n",
            "ma.L3         -0.7451      0.612     -1.217      0.224      -1.945       0.455\n",
            "ma.L4          0.9971      0.904      1.103      0.270      -0.775       2.769\n",
            "sigma2         0.2918      0.261      1.116      0.264      -0.221       0.804\n",
            "===================================================================================\n",
            "Ljung-Box (L1) (Q):                   0.60   Jarque-Bera (JB):              1026.85\n",
            "Prob(Q):                              0.44   Prob(JB):                         0.00\n",
            "Heteroskedasticity (H):               0.30   Skew:                             0.27\n",
            "Prob(H) (two-sided):                  0.00   Kurtosis:                        13.38\n",
            "===================================================================================\n",
            "\n",
            "Warnings:\n",
            "[1] Covariance matrix calculated using the outer product of gradients (complex-step).\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.8/dist-packages/statsmodels/base/model.py:604: ConvergenceWarning: Maximum Likelihood optimization failed to converge. Check mle_retvals\n",
            "  warnings.warn(\"Maximum Likelihood optimization failed to \"\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "##realizamos pronóstico\n",
        "inflacion_usa['inflacion_diff_pronosticada'] = resultado1.predict()\n"
      ],
      "metadata": {
        "id": "WCrlMi4VIBrw"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "inflacion_usa[[\"inflacion_diff\", \"inflacion_diff_pronosticada\"]].plot();"
      ],
      "metadata": {
        "id": "YzKrB55UIYLV",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 388
        },
        "outputId": "a5ef993e-5fe7-4d9e-e760-e7f52c46d41b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 864x432 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "modelo2 = ARIMA(inflacion_usa[\"inflacion_usa\"].dropna(), order=(4, 1, 4)) ##AR(4,1,4)\n",
        "resultado2 = modelo2.fit()  #calcula\n",
        "print(resultado2.summary())  #calcula"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "rHb0wQTgZbhB",
        "outputId": "2de189e7-9a25-4b23-e3d8-3e21ae76bab2"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:471: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                               SARIMAX Results                                \n",
            "==============================================================================\n",
            "Dep. Variable:          inflacion_usa   No. Observations:                  229\n",
            "Model:                 ARIMA(4, 1, 4)   Log Likelihood                -189.096\n",
            "Date:                Tue, 07 Mar 2023   AIC                            396.192\n",
            "Time:                        14:35:02   BIC                            427.056\n",
            "Sample:                             0   HQIC                           408.644\n",
            "                                - 229                                         \n",
            "Covariance Type:                  opg                                         \n",
            "==============================================================================\n",
            "                 coef    std err          z      P>|z|      [0.025      0.975]\n",
            "------------------------------------------------------------------------------\n",
            "ar.L1          0.7973      0.056     14.221      0.000       0.687       0.907\n",
            "ar.L2         -0.5669      0.093     -6.125      0.000      -0.748      -0.386\n",
            "ar.L3          0.5847      0.090      6.467      0.000       0.407       0.762\n",
            "ar.L4         -0.7069      0.061    -11.593      0.000      -0.826      -0.587\n",
            "ma.L1         -0.7426      0.412     -1.801      0.072      -1.551       0.066\n",
            "ma.L2          0.3164      0.153      2.065      0.039       0.016       0.617\n",
            "ma.L3         -0.7454      1.013     -0.736      0.462      -2.730       1.239\n",
            "ma.L4          0.9932      0.825      1.203      0.229      -0.624       2.611\n",
            "sigma2         0.2939      0.241      1.218      0.223      -0.179       0.767\n",
            "===================================================================================\n",
            "Ljung-Box (L1) (Q):                   0.58   Jarque-Bera (JB):              1020.94\n",
            "Prob(Q):                              0.45   Prob(JB):                         0.00\n",
            "Heteroskedasticity (H):               0.31   Skew:                             0.26\n",
            "Prob(H) (two-sided):                  0.00   Kurtosis:                        13.35\n",
            "===================================================================================\n",
            "\n",
            "Warnings:\n",
            "[1] Covariance matrix calculated using the outer product of gradients (complex-step).\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.8/dist-packages/statsmodels/base/model.py:604: ConvergenceWarning: Maximum Likelihood optimization failed to converge. Check mle_retvals\n",
            "  warnings.warn(\"Maximum Likelihood optimization failed to \"\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "##realizamos pronóstico\n",
        "inflacion_usa[\"inflacion_pronosticada\"] = resultado2.predict()"
      ],
      "metadata": {
        "id": "yP2w4r9MdRhE"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "inflacion_usa[[\"inflacion_usa\",\"inflacion_pronosticada\"]].plot();"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 388
        },
        "id": "U5UyIf5OdjMf",
        "outputId": "a4af480f-7981-482b-f884-f08f0d64755f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 864x432 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "inflacion_usa.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 237
        },
        "id": "haKOaMBBeZCL",
        "outputId": "412a4d86-988f-4f6c-a448-cb7281e43831"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        inflacion_usa  inflacion_diff  inflacion_diff_pronosticada  \\\n",
              "mes                                                                  \n",
              "ene-04       1.926252             NaN                          NaN   \n",
              "feb-04       1.693064       -0.233188                     0.000000   \n",
              "mar-04       1.737242        0.044178                    -0.233188   \n",
              "abr-04       2.285092        0.547850                    -0.043144   \n",
              "may-04       3.051771        0.766679                     0.220420   \n",
              "\n",
              "        inflacion_pronosticada  \n",
              "mes                             \n",
              "ene-04                0.000000  \n",
              "feb-04                1.926252  \n",
              "mar-04                1.667720  \n",
              "abr-04                1.796717  \n",
              "may-04                2.367202  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f8cbd9c2-561d-4e22-9c33-adf0e9d3f791\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>inflacion_usa</th>\n",
              "      <th>inflacion_diff</th>\n",
              "      <th>inflacion_diff_pronosticada</th>\n",
              "      <th>inflacion_pronosticada</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mes</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>ene-04</th>\n",
              "      <td>1.926252</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>feb-04</th>\n",
              "      <td>1.693064</td>\n",
              "      <td>-0.233188</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.926252</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mar-04</th>\n",
              "      <td>1.737242</td>\n",
              "      <td>0.044178</td>\n",
              "      <td>-0.233188</td>\n",
              "      <td>1.667720</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>abr-04</th>\n",
              "      <td>2.285092</td>\n",
              "      <td>0.547850</td>\n",
              "      <td>-0.043144</td>\n",
              "      <td>1.796717</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>may-04</th>\n",
              "      <td>3.051771</td>\n",
              "      <td>0.766679</td>\n",
              "      <td>0.220420</td>\n",
              "      <td>2.367202</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f8cbd9c2-561d-4e22-9c33-adf0e9d3f791')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-f8cbd9c2-561d-4e22-9c33-adf0e9d3f791 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-f8cbd9c2-561d-4e22-9c33-adf0e9d3f791');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 52
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "inflacion_usa.tail()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 237
        },
        "id": "fY-R4sUVejcQ",
        "outputId": "a0e013cc-b601-444a-e946-a5d8ea86e3f1"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        inflacion_usa  inflacion_diff  inflacion_diff_pronosticada  \\\n",
              "mes                                                                  \n",
              "sep-22        8.20167       -0.061023                    -0.041034   \n",
              "oct-22        7.70000       -0.501670                     0.240682   \n",
              "nov-22        7.10000       -0.600000                    -0.238433   \n",
              "dic-22        6.50000       -0.600000                    -0.229474   \n",
              "ene-23        6.40000       -0.100000                     0.264131   \n",
              "\n",
              "        inflacion_pronosticada  \n",
              "mes                             \n",
              "sep-22                8.280123  \n",
              "oct-22                8.638753  \n",
              "nov-22                7.757517  \n",
              "dic-22                7.200897  \n",
              "ene-23                7.040021  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-59ad7f99-81c7-421a-b051-615911fbea58\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>inflacion_usa</th>\n",
              "      <th>inflacion_diff</th>\n",
              "      <th>inflacion_diff_pronosticada</th>\n",
              "      <th>inflacion_pronosticada</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mes</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>sep-22</th>\n",
              "      <td>8.20167</td>\n",
              "      <td>-0.061023</td>\n",
              "      <td>-0.041034</td>\n",
              "      <td>8.280123</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>oct-22</th>\n",
              "      <td>7.70000</td>\n",
              "      <td>-0.501670</td>\n",
              "      <td>0.240682</td>\n",
              "      <td>8.638753</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>nov-22</th>\n",
              "      <td>7.10000</td>\n",
              "      <td>-0.600000</td>\n",
              "      <td>-0.238433</td>\n",
              "      <td>7.757517</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>dic-22</th>\n",
              "      <td>6.50000</td>\n",
              "      <td>-0.600000</td>\n",
              "      <td>-0.229474</td>\n",
              "      <td>7.200897</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ene-23</th>\n",
              "      <td>6.40000</td>\n",
              "      <td>-0.100000</td>\n",
              "      <td>0.264131</td>\n",
              "      <td>7.040021</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-59ad7f99-81c7-421a-b051-615911fbea58')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-59ad7f99-81c7-421a-b051-615911fbea58 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-59ad7f99-81c7-421a-b051-615911fbea58');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 53
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "resultado2.predict(229,232)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "kV-jyJIEem9t",
        "outputId": "cea9810b-3cd9-475e-a501-969034649154"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/base/tsa_model.py:834: ValueWarning: No supported index is available. Prediction results will be given with an integer index beginning at `start`.\n",
            "  return get_prediction_index(\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "229    6.481743\n",
              "230    6.346643\n",
              "231    6.341729\n",
              "232    5.904269\n",
              "Name: predicted_mean, dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 54
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "El modelo pronostica que para febrero la inflacion en USA sera de 6.3666%\n"
      ],
      "metadata": {
        "id": "ysUXE195fEAw"
      }
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "u2JV4kpki2FD"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/drive')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "qG0RKHCoi4Ft",
        "outputId": "9b30ca7b-7a58-431c-b478-c9412a5de3fb"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mounted at /content/drive\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "pd.read_csv(\"/content/drive/MyDrive/Colab Notebooks/tipo_de_cambio.csv\")"
      ],
      "metadata": {
        "id": "9Vsr4EwsjLMF",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "outputId": "533913fc-0dc8-4668-80b3-5be5db2950a0"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "          Date  tipo_cambio\n",
              "0     07/03/18    18.698299\n",
              "1     08/03/18    18.625000\n",
              "2     09/03/18    18.601000\n",
              "3     12/03/18    18.575899\n",
              "4     13/03/18    18.599581\n",
              "...        ...          ...\n",
              "1300  01/03/23    18.300940\n",
              "1301  02/03/23    18.115971\n",
              "1302  03/03/23    18.105301\n",
              "1303  06/03/23    17.978001\n",
              "1304  07/03/23    18.012699\n",
              "\n",
              "[1305 rows x 2 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-7d70ba17-5eb8-444f-b6f8-4150d5a03f1c\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Date</th>\n",
              "      <th>tipo_cambio</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>07/03/18</td>\n",
              "      <td>18.698299</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>08/03/18</td>\n",
              "      <td>18.625000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>09/03/18</td>\n",
              "      <td>18.601000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>12/03/18</td>\n",
              "      <td>18.575899</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>13/03/18</td>\n",
              "      <td>18.599581</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1300</th>\n",
              "      <td>01/03/23</td>\n",
              "      <td>18.300940</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1301</th>\n",
              "      <td>02/03/23</td>\n",
              "      <td>18.115971</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1302</th>\n",
              "      <td>03/03/23</td>\n",
              "      <td>18.105301</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1303</th>\n",
              "      <td>06/03/23</td>\n",
              "      <td>17.978001</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1304</th>\n",
              "      <td>07/03/23</td>\n",
              "      <td>18.012699</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>1305 rows × 2 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7d70ba17-5eb8-444f-b6f8-4150d5a03f1c')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-7d70ba17-5eb8-444f-b6f8-4150d5a03f1c button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-7d70ba17-5eb8-444f-b6f8-4150d5a03f1c');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 4
        }
      ]
    }
  ]
}